import java.util.*;

public class UASASD {

    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            int N = scanner.nextInt();
            int M = scanner.nextInt();
            scanner.nextLine();  // Consume newline
            
            // Inisialisasi list of sets untuk setiap gerbong
            List<Set<Integer>> gerbong = new ArrayList<>();
            for (int i = 0; i < N; i++) {
                gerbong.add(new HashSet<>());
            }
            
            List<Integer> results = new ArrayList<>();
            int personId = 1;  // Inisialisasi ID unik untuk setiap orang
            
            for (int i = 0; i < M; i++) {
                String line = scanner.nextLine();
                String[] parts = line.split(" ");
                int tipe = Integer.parseInt(parts[0]);
                
                if (tipe == 1) {
                    int X = Integer.parseInt(parts[1]) - 1;  // Gerbong (0-indexed)
                    int Y = Integer.parseInt(parts[2]);
                    // Tambahkan orang ke set di gerbong X dengan ID unik
                    for (int j = 0; j < Y; j++) {
                        gerbong.get(X).add(personId++);
                    }
                } else if (tipe == 2) {
                    int A = Integer.parseInt(parts[1]) - 1;  // Awal interval pertama (0-indexed)
                    int B = Integer.parseInt(parts[2]) - 1;  // Akhir interval pertama (0-indexed)
                    int C = Integer.parseInt(parts[3]) - 1;  // Awal interval kedua (0-indexed)
                    int D = Integer.parseInt(parts[4]) - 1;  // Akhir interval kedua (0-indexed)
                    
                    Set<Integer> uniquePeople = new HashSet<>();
                    // Gabungkan set untuk interval [A, B]
                    for (int j = A; j <= B; j++) {
                        uniquePeople.addAll(gerbong.get(j));
                    }
                    // Gabungkan set untuk interval [C, D]
                    for (int j = C; j <= D; j++) {
                        uniquePeople.addAll(gerbong.get(j));
                    }
                    
                    results.add(uniquePeople.size());
                }
            }
            
            for (int result : results) {
                System.out.println(result);
            }
        }
    }
}

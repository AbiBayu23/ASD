*Pseudocode* 
BEGIN
    Scanner scanner = new Scanner(System.in)  → O(1)
    N = scanner.nextInt() →O(1)
    M = scanner.nextInt() → O(1)
    scanner.nextLine()  → O(1)
    
    List of Sets gerbong = new ArrayList()→ O(1)
    FOR i = 0 TO N-1 DO → O(n)
        gerbong.add(new HashSet()) → O(1)
    END FOR
    
    List results = new ArrayList() → O(1)
    personId = 1  → O(1)
    FOR i = 0 TO M-1 DO → O(n)
        line = scanner.nextLine() → O(1)
        parts = line.split(" ") → O(1)
        tipe = Integer.parseInt(parts[0]) → O(1)
        
        IF tipe == 1 THEN → O(1)
            X = Integer.parseInt(parts[1]) - 1 → O(1)
            Y = Integer.parseInt(parts[2]) → O(1)
            FOR j = 0 TO Y-1 DO → O(n)
                gerbong.get(X).add(personId) → O(1)
                personId = personId + 1 → O(1)
            END FOR
            
        ELSE IF tipe == 2 THEN → O(1)
            A = Integer.parseInt(parts[1]) - 1  → O(1)
            B = Integer.parseInt(parts[2]) - 1  → O(1)
            C = Integer.parseInt(parts[3]) - 1  → O(1)
            D = Integer.parseInt(parts[4]) - 1 → O(1)
            
            Set uniquePeople = new HashSet() → O(1)
            FOR j = A TO B DO → O(n)
                uniquePeople.addAll(gerbong.get(j)) → O(1)
            END FOR
            FOR j = C TO D DO → O(n)
                uniquePeople.addAll(gerbong.get(j)) → O(1)
            END FOR
            
            results.add(uniquePeople.size()) → O(1)
        END IF
    END FOR
    
    FOR result in results DO → O(n)
        PRINT result → O(1)
    END FOR
END

Big O = 1 + 1 + 1 + 1 + 1 + O(n*1) + 1 + 1 + (n*1*1*1*1*1*1*N*1*1*1*1*1 *1*1*1*n*1*n*1*1) + (n*1)
= 5 + n + 2 + n^2+n
= n^2

